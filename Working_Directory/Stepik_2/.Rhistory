test_data <- as.data.frame(list(V1 = c(-9.7, -10, -10.5, -7.8, -8.9), V2 = c(NA, -10.2, -10.1, -9.3, -12.2), V3 = c(NA, NA, -9.3, -10.9, -9.8)))
test_data
test_data[test_data>0]
test_data[test_data>0, na.rm = T]
test_data[lapply(test_data,length)>0]
test_data[lapply(test_data,length)>0]
test_data
test_data
test_data[lapply(test_data,length)>0]
test_data[lapply(test_data,length)<0]
test_data[lapply(test_data)>0]
test_data[lapply(test_data,test_data)]
find_negative <- function(x){
x[x < 0]
}
find_negative(test_data)
character(0)
character(0)
x <- character(0)
x
lapply(test_data, mean)
lapply(test_data, mean, na.rm = T)
lapply(test_data, function(x) x * 2)
lapply(test_data, function(x) x * 2, na.rm = T)
lapply(test_data, test_data[test_data < 0], na.rm = T)
lapply(test_data, test_data[test_data] < 0, na.rm = T)
apply(test_data, test_data[test_data] < 0, na.rm = T)
apply(test_data, 1, test_data[test_data] < 0, na.rm = T)
lapply(test_data, 1, test_data[test_data] < 0, na.rm = T)
lapply(test_data, test_data[test_data] < 0, na.rm = T)
?lapply
lapply(test_data, function(x) x[x < 0], na.rm = T)
lapply(test_data, function(x) x[x < 0])
test_data
apply(X = test_data, MARGIN = 2, FUN = x[x < 0])
apply(X = test_data, MARGIN = 2, function(x) x[x < 0])
apply(X = test_data, MARGIN = 2, function(x) x[x[x < 0]])
apply(X = test_data, MARGIN = 2, function(x) x[x[x < 0] && x[is.na(x) == F]])
apply(X = test_data, MARGIN = 2, function(x) x[x[x < 0] && x[is.na(x) == T]])
apply(X = test_data, MARGIN = 2, function(x) x[is.na(x) == F])
apply(X = test_data, MARGIN = 2, function(x) x[x[x < 0] %in% x[is.na(x) == F]])
sapply(X = test_data, MARGIN = 2, function(x) x[x[x < 0] %in% x[is.na(x) == F]])
spply(X = test_data, function(x) x[x[x < 0] %in% x[is.na(x) == F]])
sapply(X = test_data, function(x) x[x[x < 0] %in% x[is.na(x) == F]])
test_data <- as.data.frame(list(V1 = c(NA, 0.5, 0.7, 8), V2 = c(-0.3, NA, 2, 1.2), V3 = c(2, -1, -5, -1.2)))
sapply(X = test_data, function(x) x[x[x < 0] %in% x[is.na(x) == F]])
test_data <- as.data.frame(list(V1 = c(NA, -0.5, -0.7, -8), V2 = c(-0.3, NA, -2, -1.2), V3 = c(1, 2, 3, NA)))
sapply(X = test_data, function(x) x[x[x < 0] %in% x[is.na(x) == F]])
apply(test_data, 2, function(x) x[!is.na(x) & x < 0])
apply(test_data,2,sd,na.rm = T)
test_data <- as.data.frame(list(V1 = c(-9.7, -10, -10.5, -7.8, -8.9), V2 = c(NA, -10.2, -10.1, -9.3, -12.2), V3 = c(NA, NA, -9.3, -10.9, -9.8)))
apply(test_data, 2, function(x) x[!is.na(x) & x < 0])
test_data <- as.data.frame(list(V1 = c(NA, 0.5, 0.7, 8), V2 = c(-0.3, NA, 2, 1.2), V3 = c(2, -1, -5, -1.2)))
apply(test_data, 2, function(x) x[!is.na(x) & x < 0])
test_data <- as.data.frame(list(V1 = c(NA, -0.5, -0.7, -8), V2 = c(-0.3, NA, -2, -1.2), V3 = c(1, 2, 3, NA)))
apply(test_data, 2, function(x) x[!is.na(x) & x < 0])
l <- apply(test_data, 2, function(x) x[!is.na(x) & x < 0])
l[lapply(l,length)>0]
as.matrix(l[lapply(l,length)>0])
l[sapply(l,length)>0]
result <- l[sapply(l,length)>0]
l[sapply(l,length)>0]
test_data <- as.data.frame(list(V1 = c(NA, NA, NA, NA, 13, 12, 9, 10, 8, 9, 11, 11, 10, 12, 9),
V2 = c(NA, 12, 8, NA, 11, 11, 9, 8, 8, 10, 10, 11, 10, 10, 10),
V3 = c(NA, 5, NA, 13, 12, 11, 11, 14, 8, 12, 8, 8, 10, 10, 8),
V4 = c(10, 10, 10, 10, 13, 10, 11, 7, 12, 10, 7, 10, 13, 10, 9)))
test_data
apply(test_data,2,sd,na.rm = T)
apply(test_data,2,norm,na.rm = T)
apply(test_data,2,mean,na.rm = T)
apply(test_data,2,function(x) x[is.na(x)] <- apply(test_data,2,mean,na.rm = T))
test_data
apply(test_data,2,function(x) x[is.na(x)] <- apply(test_data,2,mean,na.rm = T))
apply(test_data,2,function(x) x[is.na(x)] <- 0)
test_data
apply(test_data,2, function(x) x[is.na(x)]<-0)
apply(test_data,2, function(x) x[is.na(x)])
apply(test_data,2, function(x) x[is.na(x) <-0])
apply(test_data,2, function(x) x[is.na(x)])
apply(test_data,2, function(x) x[is.na(x)] <- 1)
apply(test_data,1, function(x) x[is.na(x)] <- 1)
apply(test_data,1, function(x) x[is.na(x)] = 1)
sapply(test_data, function(x) x[is.na(x)] = 1)
apply(test_data,2 ,mean,na.rm = T)
sapply(test_data, function(x) x[!is.na(x)] = 1)
sapply(test_data, function(x) x[is.na(x)] = 1)
function(y) {
return(y[is.na(y)] <- mean(y, na.rm=T))
}
na_rm  <- function(x) {
return(y[is.na(y)] <- mean(y, na.rm=T))
}
na.rm(test_data)
na_rm(test_data)
na_rm  <- function(y) {
return(y[is.na(y)] <- mean(y, na.rm=T))
}
na_rm(test_data)
y[is.na(test_data)] <- mean(test_data, na.rm=T)
test_data[is.na(test_data)] <- mean(test_data, na.rm=T)
test_data[is.na(test_data)]
mean(test_data, na.rm=T)
mean(test_data, na.rm=F)
sapply(test_data, function(x) x[is.na(x)])
na_rm  <- function(y) {
return(y[is.na(y)] <- mean(y[!na.rm=T]))
}
na_rm(test_data)
test_data[is.na(test_data)] <- mean(mean(y[!na.rm=T]))
test_data[is.na(test_data)] <- mean(mean(y[!na.rm]))
test_data[is.na(test_data)] <- mean(mean(test_data[!na.rm]))
test_data[is.na(test_data)] <- mean(mean(test_data[!is.na]))
test_data[is.na(test_data)] <- mean(mean(test_data[!is.na[test_data]]))
nnna <- function(y) {
return(y[is.na(y)] <- mean(y[!na.rm=T]))
}
nnna <- function(y) {
return(y[is.na(y)] <- mean(y[!na.rm=T]))
}
nnna <- function(y) {
return(y[is.na(y)] <- mean(y[!is.na(y)]))
}
apply(test_data, 2, nnna(test_data))
nnna <- function(y) {
return(y[is.na(y)] <- mean(y[!is.na(y)]))
}
apply(test_data, 2, nnna
)
apply(test_data, 2, nnna)
test_data[] <- lapply(test_data, function(x) ifelse(is.na(x), mean(x, na.rm = TRUE), x))
test_data
na_rm  <- function(x){
x[] <- lapply(x, function(y) ifelse(is.na(y), mean(y, na.rm = TRUE), y))
}
na_rm(test_data)
na_rm  <- function(x){
return(x[] <- lapply(x, function(y) ifelse(is.na(y), mean(y, na.rm = TRUE), y)))
}
na_rm(test_data)
test_data <- as.data.frame(list(V1 = c(NA, NA, NA, NA, 13, 12, 9, 10, 8, 9, 11, 11, 10, 12, 9),
V2 = c(NA, 12, 8, NA, 11, 11, 9, 8, 8, 10, 10, 11, 10, 10, 10),
V3 = c(NA, 5, NA, 13, 12, 11, 11, 14, 8, 12, 8, 8, 10, 10, 8),
V4 = c(10, 10, 10, 10, 13, 10, 11, 7, 12, 10, 7, 10, 13, 10, 9)))
na_rm(test_data)
na_rm  <- function(x){
return(as.data.frame(x[] <- lapply(x, function(y) ifelse(is.na(y), mean(y, na.rm = TRUE), y))))
}
na_rm(test_data)
d <- data.frame(X1 = c(-1, -2, 0), X2 = c(10, 4, NA), X3 = c(-4, NA, NA))
lapply(d, sum, na.rm = T)
lapply(d, is.na(x), na.rm = T)
lapply(d, function(x) {
is.na(x)
})
lapply(d, function(x) {
!is.na(x)
})
lapply(d, function(x) {
!is.na(x) && x[x>0]
})
lapply(d, function(y) ifelse(is.na(y), mean(y, na.rm = TRUE), y))
lapply(d, function(y) ifelse(is.na(y), sum(y, na.rm = TRUE), y))
lapply(d, function(y) ifelse(is.na(y), sum(y, na.rm = TRUE), y))
lapply(d, function(y) ifelse(is.na(y), sum(y, na.rm = TRUE)))
d <- data.frame(X1 = c(-1, -2, 0), X2 = c(10, 4, NA), X3 = c(-4, NA, NA))
lapply(d, mean)
lapply(d, mean, na.rm = T)
lapply(d, function(x) d[d<0] <- 0)
d <- data.frame(X1 = c(-1, -2, 0), X2 = c(10, 4, NA), X3 = c(-4, NA, NA))
d
lapply(d, function(x) d[d<0] <- 0)
lapply(d, function(x) d[[d<0] && [is.na(d)]] <- 0)
lapply(d, function(x) d[d<0 && is.na(d)] <- 0)
lapply(d, function(x) d[d<0 || is.na(d)] <- 0)
d <- data.frame(X1 = c(-1, -2, 0), X2 = c(10, 4, NA), X3 = c(-4, NA, NA))
d
lapply(d, function(x) d[d<0 || is.na(d)])
d <- data.frame(X1 = c(-1, -2, 0), X2 = c(10, 4, NA), X3 = c(-4, NA, NA))
d
lapply(d, function(x) d[d<0])
sapply(d, function(x) d[d<0])
sapply(d, function(x) x[x<0])
lapply(d, function(x) x[x<0 || is.na(x)])
sapply(d, function(x) x[x<0])
lapply(d, function(x) x[x<0])
lapply(d, function(x) x[is.na(x)])
lapply(d, function(x) x[!is.na(x)])
lapply(d, function(x) x[x<0 || !is.na(x)])
d
lapply(d, function(x) x[x<0 || !is.na(x)])
lapply(d, function(x) x[x<0 && !is.na(x)])
lapply(d, function(x) x[x<0 && !is.na(x)])
lapply(d, function(x) x[x<0 && !is.na(x)] = 0)
lapply(d, function(x) x[x<0 & !is.na(x)])
lapply(d, function(x) x[x<0 & !is.na(x)] <- 0)
d <- lapply(d, function(x) x[x<0 & !is.na(x)] <- 0)
d
d
d <- data.frame(X1 = c(-1, -2, 0), X2 = c(10, 4, NA), X3 = c(-4, NA, NA))
d <- data.frame(X1 = c(-1, -2, 0), X2 = c(10, 4, NA), X3 = c(-4, NA, NA))
lapply(d, function(x) sum(x))
lapply(d, function(x) sum(x[x>0 & !is.na(x)]))
test_data <- as.data.frame(list(name = c("p4@HPS1", "p7@HPS2", "p4@HPS3", "p7@HPS4", "p7@HPS5", "p9@HPS6", "p11@HPS7", "p10@HPS8", "p15@HPS9"), expression = c(118.84, 90.04, 106.6, 104.99, 93.2, 66.84, 90.02, 108.03, 111.83)))
test_data <- as.data.frame(list(name = c("p4@HPS1", "p7@HPS2", "p4@HPS3", "p7@HPS4", "p7@HPS5",
"p9@HPS6", "p11@HPS7", "p10@HPS8", "p15@HPS9"),
expression = c(118.84, 90.04, 106.6, 104.99, 93.2, 66.84, 90.02,
108.03, 111.83)))
grepl("HPS1", test_data)
grepl("HPS1", test_data[1])
grepl("HPS1", test_data[1,])
grepl("HPS1", test_data[,1])
test_data
grepl("HPS1", test_data$name)
ansver <- test_data$expression[grepl("HPS1", test_data$name)]
ansver
my_names <- function (dataset, names){
return(test_data$expression[grepl("HPS1", test_data$name)])
}
my_names(test_data, names)
> names = c("HPS5", "HPS6", "HPS9", "HPS2", "HPS3", "HPS7", "HPS4", "HPS8")
my_names(test_data, names)
names = c("HPS5", "HPS6", "HPS9", "HPS2", "HPS3", "HPS7", "HPS4", "HPS8")
my_names(test_data, names)
my_names <- function (dataset, names){
return(test_data$expression[grepl(names, test_data$name)])
}
my_names(test_data, names)
names
my_names <- function (dataset, names){
return(dataset$expression[grepl(names, dataset$name)])
}
my_names(test_data, names)
my_names <- function (dataset, names){
return(dataset$expression[grepl(sapply(names), dataset$name)])
}
my_names(test_data, names)
my_names <- function (dataset, names){
return(dataset$expression[grepl(sapply(names, return(names)), dataset$name)])
}
my_names(test_data, names)
my_names <- function (dataset, names){
return(dataset$expression[grepl(sapply(names, return(names)), dataset$name)])
}
my_names(test_data, names)
names
my_names <- function (dataset, names){
return(dataset$expression[grepl(lapply(names, return(names)), dataset$name)])
}
my_names(test_data, names)
lapply(names, return(names))
lapply(names, return(x))
my_names <- function (dataset, names){
return(dataset$expression[grepl(lapply(names, return(x)), dataset$name)])
}
my_names(test_data, names)
sapply(names, return(x))
sapply(names, function(x) return(x))
sapply(names, function(x) x)
my_names <- function (dataset, names){
return(dataset$expression[grepl(sapply(names, function(x) x), dataset$name)])
}
my_names(test_data, names)
sapply(names, x)
function(x)
sapply(names, function(x) x)
sapply(names, function(x) x)
apply(names, function(x) x)
apply(names, 1, function(x) x)
apply(names, 2, function(x) x)
lapply(names, 2, function(x) x)
lapply(names, function(x) x)
my_names <- function (dataset, names){
return(dataset$expression[grepl(lapply(names, function(x) x), dataset$name)])
}
my_names(test_data, names)
my_names <- function (dataset, names){
return(sapply(names, function(x) dataset$expression[grepl(names, dataset$name)]))
}
my_names(test_data, names)
dataset <- as.data.frame(list(name = c("p4@HPS1", "p7@HPS2", "p4@HPS3", "p7@HPS4", "p7@HPS5",
"p9@HPS6", "p11@HPS7", "p10@HPS8", "p15@HPS9"),
expression = c(118.84, 90.04, 106.6, 104.99, 93.2, 66.84, 90.02,
108.03, 111.83)))
names = c("HPS5", "HPS6", "HPS9", "HPS2", "HPS3", "HPS7", "HPS4", "HPS8")
my_names <- function (dataset, names){
return(sapply(names, function(x) dataset$expression[grepl(names, dataset$name)]))
}
my_names(test_data, names)
sapply(names, function(x) dataset$expression[grepl(names, dataset$name)])
sapply(names, function(x) dataset$expression[grepl(x, dataset$name)])
my_names <- function (dataset, names){
return(sapply(names, function(x) dataset$expression[grepl(x, dataset$name)]))
}
my_names(test_data, names)
my_names <- function (dataset, names){
return(as.data.frame(sapply(names, function(x) dataset$expression[grepl(x, dataset$name)])))
}
my_names(test_data, names)
my_names <- function (dataset, names){
return(sapply(names, function(x) dataset$expression[grepl(x, dataset$name)]))
}
my_names(test_data, names)
my_names <- function (dataset, names){
return(as.data.frame(sapply(names, function(x) dataset[,grepl(x, dataset$name)])))
}
my_names(test_data, names)
my_names <- function (dataset, names){
return(as.data.frame(sapply(names, function(x) dataset[grepl(x, dataset$name)])))
}
my_names(test_data, names)
str(dataset)
datsset
dataset
my_names <- function (dataset, names){
return(as.data.frame(sapply(names, function(x) dataset[grepl(x, dataset$name),])))
}
my_names(test_data, names)
my_names <- function (dataset, names){
return(sapply(names, function(x) dataset[grepl(x, dataset$name),]))
}
my_names(test_data, names)
my_names <- function (dataset, names){
return(as.data.frame(sapply(names, function(x) dataset[grepl(x, dataset$name),])))
}
my_names(test_data, names)
dataset
my_names <- function (dataset, names){
return(as.data.frame(sapply(names, function(x) dataset[grepl(x, dataset$x),])))
}
my_names(test_data, names)
dataset
my_names(test_data, names)
my_names <- function (dataset, names){
return(as.data.frame(sapply(names, function(x) dataset[grepl(x, dataset$name),])))
}
my_names(test_data, names)
dataset
my_names <- function (dataset, names){
return(as.data.frame(sapply(names, function(x) dataset[grepl(x, dataset$name),])))
}
my_names(test_data, names)
dataset[,]
dataset[1,]
dataset[,1]
dataset[1,]
c(dataset[1,],dataset[2,])
grepl(names, dataset$name)
grepl(names[1], dataset$name)
my_names <- function (dataset, names){
return(as.data.frame(sapply(names, function(x) dataset[grepl(dataset, dataset$name),])))
}
my_names(test_data, names)
?grepl
my_names <- function (dataset, names){
return(as.data.frame(sapply(names, function(x) dataset[grepl(x, dataset$name),])))
}
my_names(test_data, names)
my_names <- function (dataset, names){
return(as.data.frame(lapply(names, function(x) dataset[grepl(x, dataset$name),])))
}
my_names(test_data, names)
my_names <- function (dataset, names){
return(as.data.frame(sapply(names, function(x) dataset[grepl(x, dataset$name),])))
}
my_names <- function (dataset, names){
return(as.data.frame(names, function(x) dataset[grepl(x, dataset$name),]))
}
my_names(test_data, names)
my_names <- function (dataset, names){
return(sapply(names, function(x) dataset[grepl(x, dataset$name),])))
}
my_names <- function (dataset, names){
return(sapply(names, function(x) dataset[grepl(x, dataset$name),]))
}
my_names(test_data, names)
my_names <- function (dataset, names){
return(as.data.frame(sapply(names, function(x) dataset[grepl(x, dataset$name),])))
}
my_names(test_data, names)
my_names <- function (dataset, names){
return(sapply(names, function(x) dataset[grepl(x, dataset$name),]))
}
my_names(test_data, names)
my_names <- function (dataset, names){
return(t(as.data.frame(sapply(names, function(x) dataset[grepl(x, dataset$name),]))))
}
my_names(test_data, names)
dataset
my_names <- function (dataset, names){
return(t(as.data.frame(sapply(names, function(x) dataset[grepl(x, dataset$name),]))))
}
my_names(test_data, names)
my_names <- function (dataset, names){
return(as.data.frame(t(sapply(names, function(x) dataset[grepl(x, dataset$name),]))))
}
my_names(test_data, names)
my_names <- function (dataset, names){
z <- as.data.frame(t(sapply(names, function(x) dataset[grepl(x, dataset$name),])))
sapply(z, function(x) as.numeric(x[, 2]))
}
my_names(test_data, names)
my_names <- function (dataset, names){
return(as.data.frame(t(sapply(names, function(x) dataset[grepl(x, dataset$name),]))))
}
x <- my_names(test_data, names)
x
x[3,]
x[, 3]
x[, 2]
str(x)
as.numeric(x[, 2])
x[, 2] <- as.numeric(x[, 2])
x
my_names <- function (dataset, names){
z <- as.data.frame(t(sapply(names, function(x) dataset[grepl(x, dataset$name),])))
z[, 2] <- as.numeric(z[, 2])
}
x <- my_names(test_data, names)
x
my_names(test_data, names)
my_names <- function (dataset, names){
z <- as.data.frame(t(sapply(names, function(x) dataset[grepl(x, dataset$name),])))
z[, 2] <- as.numeric(z[, 2])
}
my_names <- function (dataset, names){
z <- as.data.frame(t(sapply(names, function(x) dataset[grepl(x, dataset$name),])))
z[, 2] <- as.numeric(z[, 2])
return(z)
}
my_names(test_data, names)
