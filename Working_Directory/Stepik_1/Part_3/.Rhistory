getwd()
df  <- mtcars
getwd()
?cor.test
cor.test(x = df$mpg, y = df$hp)
fit  <- cor.test(x = df$mpg, y = df$hp)
cor.test(~ mpg + hp, df)
str(fit)
plot(x = df$mpg, y = df$hp)
ggplot(df, aes(x = mpg, y = hp, col = factor(cyl)))+
geom_point(size = 5)+
facet_grid(. ~ am)
###
library(ggplot2)
ggplot(df, aes(x = mpg, y = hp, col = factor(cyl)))+
geom_point(size = 5)+
facet_grid(. ~ am)
ggplot(df, aes(x = mpg, y = hp, col = factor(cyl)))+
geom_point(size = 5)
ggplot(df, aes(x = mpg, y = hp, col = factor(cyl)))+
geom_point(size = 3)
ggplot(df, aes(x = mpg, y = hp, col = factor(cyl)))+
geom_point(size = 2)
ggplot(df, aes(x = mpg, y = hp, col = factor(cyl)))+
geom_point(size = 2.5)
corr.calc <- function(x){
return(cor.test(x))
}
corr.calc( mtcars[, c(1,5)] )
return(cor.test(x[1], x[2]))
#####
corr.calc <- function(x){
return(cor.test(x[1], x[2]))
}
corr.calc( mtcars[, c(1,5)] )
banana <- mtcars[, c(1,5)]
banana
banana[1]
banana[[1]
]
corr.calc <- function(x){
return(cor.test(x[[1]], x[[2]]))
}
corr.calc( mtcars[, c(1,5)] )
str(fit)
corr.calc( mtcars[, c(1,5)] )
str(fit)
banana <- corr.calc( mtcars[, c(1,5)] )
banana$p.value
str(fit)
banana
banana$statistic
banana$estimate
corr.calc <- function(x){
return(c(cor.test(x[[1]], x[[2]])$estimate, cor.test(x[[1]], x[[2]])$p.value))
}
banana <- corr.calc( mtcars[, c(1,5)] )
banana$p.value
banana
#2
step6 <-  read.table("step6.csv",  header=TRUE, sep=',' )
step6
str(step6)
check.numeric(step6
)
?check.numeric
is.numeric(step6)
is.numeric(step6[1])
is.numeric(step6[[1]])
str(step6)
step6
str(step6)
is.numeric(1)
is.numeric(1q)
is.numeric('1')
step6[1]
step6[1][1]
step6[[1]]
step6[1,1]
step6[1]
step6[1][1]
step6[1][1]
step6[1,1]
step6[1,2]
step6[2,1]
step6[2:3,1]
step6[1:3,1]
step6[1,2]
is.numeric(step6[1,2])
is.numeric(step6[1,1])
is.numeric(step6[1, 1])
is.numeric(step6[1, 2])
library(gdata)
install(gdata)
#2
install.packages("gdata")
library(gdata)
step6 <- droplevels(step6)
str(step6)
step6 <- step6[c(-1)]
step6
str(step6)
step6 <-  read.table("step6.csv",  header=TRUE, sep=',' )
str(step6)
step6 <- step6[c(-1)]
str(step6)
is.numeric(step6[1, 2])
!is.numeric(step6[1, 2])
step6 <- step6[is.numeric(step6)]
step6
str(step6)
step6 <- step6[is.numeric(step6),is.numeric(step6) ]
str(step6)
step6 <-  read.table("step6.csv",  header=TRUE, sep=',' )
step6 <-  read.table("step6.csv",  header=TRUE, sep=',' )
step6 <-  read.table("step6.csv",  header=TRUE, sep=',' )
step6 <- step6[is.numeric(step6),is.numeric(step6) ]
str(step6)
step6 <-  read.table("step6.csv",  header=TRUE, sep=',' )
str(step6)
step6 <-  read.table("step6.csv",  header=TRUE, sep=',' )
step6
step6 <-  read.table("step6.csv",  header=TRUE, sep=',' )
step6
is.numeric(step6[1, 2])
step6 <- step6[,is.numeric(step6) ]
step6 <- step6[c(-1)]
str(step6)
step6 <-  read.table("step6.csv",  header=TRUE, sep=',' )
step6 <- step6[,is.numeric(step6) ]
str(step6)
step6 <-  read.table("step6.csv",  header=TRUE, sep=',' )
is.numeric(step6[1, 2])
step[1, 2]
step6[1, 2]
step6[1, 1]
is.numeric(step6[1, 1])
step6[1, ]
is.numeric(step6[1, ])
step7 <- step6[is.numeric(step6), ]
step7
step7 <- step6[is.numeric(step6), 1 ]
step7
step6[1, ]
step7 <- step6[is.numeric(step6[1, ])  ]
step7
step7 <- step6[is.numeric(step6[, 1])  ]
step7
step7 <- step6[is.numeric(step6[1, ])  ]
step7
step7 <- step6[isnumeric(step6[1,])]
step7 <- step6[is.numeric(step6[1,])]
step7
step7 <- step6[,sapply(step6, is.numeric)]
step7
?sapply
clear_data
clear_data <- step6[,sapply(step6, is.numeric)]
clear_data
nrow(clear_data)
ncol(clear_data)
corrs <- vector()
corrs
corrs <- c(corrs, 1)
corrs
corrs <- c(corrs, 1)
corrs
corrs <- vector()
corrs
corrs <- vector()
for (i in ncol(clear_data)-1){
corrs <- c(corrs, cor.test(clear_data[, i], clear_data[, i+1]))
}
corrs
corrs <- vector()
step6 <-  read.table("step6.csv",  header=TRUE, sep=',' )
clear_data <- step6[,sapply(step6, is.numeric)]
clear_data
corrs <- vector()
for (i in ncol(clear_data)-1){
corrs <- c(corrs, cor.test(clear_data[, i], clear_data[, i+1])$estimate)
}
corrs
for (i in ncol(clear_data)-1){
corrs <- c(corrs, cor.test(clear_data[, i], clear_data[, i+1])$estimate)
print(i)
}
corrs <- vector()
for (i in 1:ncol(clear_data)-1){
corrs <- c(corrs, cor.test(clear_data[, i], clear_data[, i+1])$estimate)
print(i)
}
clear_data
c(corrs, cor.test(clear_data[, i], clear_data[, i+1])$estimate)
c(corrs, cor.test(clear_data[, 1], clear_data[, 2])$estimate)
c(corrs, cor.test(clear_data[, 1], clear_data[, 3])$estimate)
corrs <- vector()
for (i in 1:ncol(clear_data)-1){
corrs <- c(corrs, cor.test(clear_data[, i], clear_data[, (i+1)])$estimate)
print(i)
}
corrs, cor.test(clear_data[, i], clear_data[, (i+1)])$estimate
i = 1
cor.test(clear_data[, i], clear_data[, (i+1)])$estimate
i = 1
cor.test(clear_data[, i], clear_data[, (i+1)])$estimate
cor.test(clear_data[, i], clear_data[, (i+1)])$estimate
corrs <- vector()
for (i in 1:ncol(clear_data)-1){
print(i)
corrs <- c(corrs, cor.test(clear_data[, i], clear_data[, (i+1)])$estimate)
print(i)
}
corrs <- vector()
for (i in 2:ncol(clear_data)-1){
print(i)
corrs <- c(corrs, cor.test(clear_data[, i], clear_data[, (i+1)])$estimate)
print(i)
}
corrs
corrs <- vector()
for (i in 2:ncol(clear_data)-1){
corrs <- c(corrs, cor.test(clear_data[, i], clear_data[, (i+1)])$estimate)
}
i
ncol(clear_data)
corrs <- vector()
for (i in 2:ncol(clear_data)-1){
corrs <- abs(c(corrs, cor.test(clear_data[, i], clear_data[, (i+1)])$estimate))
}
corrs
for (i in 2:ncol(clear_data)-1){
for (j in i+1:ncol(clear_data)){
corrs <- abs(c(corrs, cor.test(clear_data[, i], clear_data[, (j)])$estimate))
}
}
for (i in 2:ncol(clear_data)-1){
for (j in i+1:ncol(clear_data)){
i
j
corrs <- abs(c(corrs, cor.test(clear_data[, i], clear_data[, (j)])$estimate))
}
}
for (i in 2:ncol(clear_data)-1){
for (j in i+1:ncol(clear_data)){
i
j
corrs <- abs(c(corrs, cor.test(clear_data[, i], clear_data[, j])$estimate))
}
}
for (i in 2:ncol(clear_data)-1){
for (j in i+1:ncol(clear_data)){
corrs <- abs(c(corrs, cor.test(clear_data[, i], clear_data[, (i+1)])$estimate))
}
}
corrs
for (i in 2:ncol(clear_data)-1){
for (j in i+1:ncol(clear_data)-1){
corrs <- abs(c(corrs, cor.test(clear_data[, i], clear_data[, j])$estimate))
}
}
for (i in 2:ncol(clear_data)-1){
for (j in i+1:ncol(clear_data)-1){
print(i)
j
corrs <- abs(c(corrs, cor.test(clear_data[, i], clear_data[, j])$estimate))
}
}
print("i", i)
for (i in 2:ncol(clear_data)-1){
for (j in i+1:ncol(clear_data)-1){
print("i", i)
print("j", j)
corrs <- abs(c(corrs, cor.test(clear_data[, i], clear_data[, j])$estimate))
}
}
for (i in 2:ncol(clear_data)-1){
for (j in i+1:ncol(clear_data)-1){
print(j)
corrs <- abs(c(corrs, cor.test(clear_data[, i], clear_data[, j])$estimate))
}
}
for (i in 2:ncol(clear_data)-1){
for (j in i+2:ncol(clear_data)-1){
print(j)
corrs <- abs(c(corrs, cor.test(clear_data[, i], clear_data[, j])$estimate))
}
}
for (i in 2:ncol(clear_data)-1){
for (j in i+2:ncol(clear_data)-i){
print(j)
corrs <- abs(c(corrs, cor.test(clear_data[, i], clear_data[, j])$estimate))
}
}
for (2<i<ncol(clear_data)-1){
corrs <- abs(c(corrs, cor.test(clear_data[, i], clear_data[, (i+1)])$estimate))
}
for (i<ncol(clear_data)-1){
corrs <- abs(c(corrs, cor.test(clear_data[, i], clear_data[, (i+1)])$estimate))
}
for (1 < i < 5){
}
for (i, 1 < i < 5, i++){
}
for (i in 1:5){
print(i)
}
for (i in 10:15){
print(i)
}
corrs
for (i in 2:ncol(clear_data)-1){
for (j in i+2:ncol(clear_data)-i){
print(j)
corrs <- abs(c(corrs, cor.test(clear_data[, i], clear_data[, j])$estimate))
}
}
for (i in 2:ncol(clear_data)-1){
for (j in i+2:ncol(clear_data)-i){
print(i)
corrs <- abs(c(corrs, cor.test(clear_data[, i], clear_data[, j])$estimate))
}
}
for (i in 2:ncol(clear_data)-1){
for (j in i:ncol(clear_data)-i){
print(i)
corrs <- abs(c(corrs, cor.test(clear_data[, i], clear_data[, j])$estimate))
}
}
()
for (i in 2:ncol(clear_data)-1){
for (j in i+1:ncol(clear_data)-i){
print(i)
corrs <- abs(c(corrs, cor.test(clear_data[, i], clear_data[, j])$estimate))
}
}
corrs
for (i in 2:ncol(clear_data)-1){
for (j in i+1:ncol(clear_data)-i){
print(i)
corrs <- abs(c(corrs, cor.test(clear_data[, i], clear_data[, j])$estimate))
}
}
corrs
for (i in 2:ncol(clear_data)-1){
for (j in i+1:ncol(clear_data)-i){
print(i)
corrs <- abs(c(corrs, cor.test(clear_data[, i], clear_data[, j])$estimate))
}
}
for (i in 2:ncol(clear_data)-1){
print(i)
for (j in i+1:ncol(clear_data)-i){
#print(j)
corrs <- abs(c(corrs, cor.test(clear_data[, i], clear_data[, j])$estimate))
}
}
corrs
for (i in 1:3){
for (j in i:3){
print(j)
}
}
for (i in 2:ncol(clear_data)-1){
#  print(i)
for (j in i+1:ncol(clear_data)){
#    print(j)
corrs <- abs(c(corrs, cor.test(clear_data[, i], clear_data[, j])$estimate))
}
}
for (i in 2:ncol(clear_data)-1){
#  print(i)
for (j in i+1:ncol(clear_data)){
print(j)
corrs <- abs(c(corrs, cor.test(clear_data[, i], clear_data[, j])$estimate))
}
}
for (i in 2:ncol(clear_data)-1){
#  print(i)
for (j in i+1:ncol(clear_data)-2){
print(j)
corrs <- abs(c(corrs, cor.test(clear_data[, i], clear_data[, j])$estimate))
}
}
for (i in 2:ncol(clear_data)-1){
#  print(i)
for (j in (i+1):(ncol(clear_data)-2)){
print(j)
corrs <- abs(c(corrs, cor.test(clear_data[, i], clear_data[, j])$estimate))
}
}
for (i in 2:ncol(clear_data)-1){
#  print(i)
for (j in (i+1):ncol(clear_data)){
print(j)
corrs <- abs(c(corrs, cor.test(clear_data[, i], clear_data[, j])$estimate))
}
}
ncol(clear_data)
for (i in 2:ncol(clear_data)-1){
#  print(i)
for (j in (i+1):ncol(clear_data)){
print(j)
corrs <- abs(c(corrs, cor.test(clear_data[, i], clear_data[, j])$estimate))
}
}
corrs
max(corrs)
corrs
for (i in 2:ncol(clear_data)-1){
print(i)
for (j in (i+1):ncol(clear_data)){
#    print(j)
corrs <- abs(c(corrs, cor.test(clear_data[, i], clear_data[, j])$estimate))
}
}
for (i in 1:ncol(clear_data)-1){
print(i)
for (j in (i+1):ncol(clear_data)){
#    print(j)
corrs <- abs(c(corrs, cor.test(clear_data[, i], clear_data[, j])$estimate))
}
}
for (i in 1:(ncol(clear_data)-1)){
print(i)
for (j in (i+1):ncol(clear_data)){
#    print(j)
corrs <- abs(c(corrs, cor.test(clear_data[, i], clear_data[, j])$estimate))
}
}
for (i in 1:(ncol(clear_data)-1)){
#  print(i)
for (j in (i+1):ncol(clear_data)){
print(j)
corrs <- abs(c(corrs, cor.test(clear_data[, i], clear_data[, j])$estimate))
}
}
for (i in 1:(ncol(clear_data)-1)){
for (j in (i+1):ncol(clear_data)){
print(i, j)
corrs <- abs(c(corrs, cor.test(clear_data[, i], clear_data[, j])$estimate))
}
}
for (i in 1:(ncol(clear_data)-1)){
for (j in (i+1):ncol(clear_data)){
print(j)
corrs <- abs(c(corrs, cor.test(clear_data[, i], clear_data[, j])$estimate))
}
}
corrs
max(corrs)
