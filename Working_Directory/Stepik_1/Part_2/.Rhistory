ggplot(df1, aes(x = Sepal.Length)) + geom_histogram(fill = "white", col = "black", binwidth = 5)
ggplot(df1, aes(x = Sepal.Length)) + geom_histogram(fill = "white", col = "black", binwidth = 0.4)
ggplot(df1, aes(x = Sepal.Length)) +
geom_histogram(fill = "white", col = "black", binwidth = 0.4) +
facet_grid(Species ~ .)
ggplot(df1, aes(x = Sepal.Length)) +
geom_histogram(fill = "white", col = "black", binwidth = 0.4) +
facet_grid(Species)
ggplot(df1, aes(x = Sepal.Length)) +
geom_histogram(fill = "white", col = "black", binwidth = 0.4) +
facet_grid(Species ~ .)
ggplot(df1, aes(Sepal.Length, col = Species))
ggplot(df1, aes(Sepal.Length, col = Species)) +
geom_density()
ggplot(df1, aes(Sepal.Length, col = Species)) +
geom_density(fit = color)
ggplot(df1, aes(Sepal.Length, col = Species)) +
geom_density(fit = Specoes)
ggplot(df1, aes(Sepal.Length, col = Species)) +
geom_density(fit = Species)
ggplot(df1, aes(Sepal.Length, col = Species)) +
geom_density(fit = df1$Species)
ggplot(df1, aes(Sepal.Length, col = Species)) +
geom_density(fill = df1$Species)
ggplot(df1, aes(Sepal.Length, col = Species)) +
geom_density(fill = Species)
ggplot(df1, aes(Sepal.Length, col = Species)) +
geom_density()
ggplot(df1, aes(Sepal.Length, col = Species, fill = Species)) +
geom_density()
ggplot(df1, aes(Sepal.Length, col = Species, fill = Species, alpha = 0.5) +
ewdwq
2
1
ggplot(df1, aes(Sepal.Length, col = Species, fill = Species, alpha(0.5)) +
1
1
1
1
ggplot(df1, aes(Sepal.Length, col = Species, fill = Species, alpha() = 0.5) +
geom_density(alpha = 0.5
geom_density(alpha = 0.5)
ggplot(df1, aes(Sepal.Length, col = Species, fill = Species) +
geom_density(alpha = 0.5)
ggplot(df1, aes(Sepal.Length, col = Species, fill = Species) +
geom_density(alpha = 0.5)
ggplot(df1, aes(Sepal.Length, col = Species, fill = Species)) +
geom_density(alpha = 0.5)
ggplot(df1, aes(Sepal.Length, col = Species, fill = Species, alpha = 0.5)) +
geom_density()
ggplot(df1, aes(Sepal.Length, col = 'Black', fill = Species, alpha = 0.5)) +
geom_density()
ggplot(df1, aes(Sepal.Length, col = Black, fill = Species, alpha = 0.5)) +
geom_density()
ggplot(df1, aes(Sepal.Length, fill = Species, alpha = 0.5)) +
geom_density()
ggplot(df1, aes(Species ))
ggplot(df1, aes(Species )) +
geom_boxplot()
ggplot(df1, aes(Species ~ Sepal.Length )) +
geom_boxplot()
ggplot(df1, aes(Species ~ Sepal.Length, df1 )) +
geom_boxplot()
ggplot(df1, aes(Species, Sepal.Length)) +
geom_boxplot()
shapiro.test(df)
shapiro.test(df1)
shapiro.test(df1$Sepal.Length)
shapiro.test(df1$Sepal.Length[Species == "versicolor"])
shapiro.test(df1$Sepal.Length[df1$Species == "versicolor"])
shapiro.test(df1$Sepal.Length[df1$Species == "virginica"])
bartlett.test(Sepal.Length ~ Species, df)
bartlett.test(Sepal.Length ~ Species, df1)
t.test(Sepal.Length ~ Species, df1)
ttt <- t.test(Sepal.Length ~ Species, df1)
str(ttt)
ttt$p.value
ttt$p.ve
t.test(Sepal.Length ~ Species, df)
t.test(df$Sepal.Length, mu = 8)
t.test(df$Sepal.Length, mu = 8, conf.level = 0.99)
t.test(df$Sepal.Length, mu = 7, conf.level = 0.99)
mean(df$Sepal.Length)
t.test(df$Sepal.Length, mu = 6, conf.level = 0.99)
t.test(df$Sepal.Length, mu = 6, conf.level = 0.95)
t.test(df$Sepal.Length, mu = 6, conf.level = 0.5)
t.test(df$Sepal.Length, mu = 6, conf.level = 0.1)
t.test(df$Sepal.Length, mu = 6, conf.level = 0.001)
t.test(df$Sepal.Length, mu = 6, conf.level = 0.99999999)
t.test(df$Sepal.Length, mu = 6, conf.level = 1)
t.test(df$Sepal.Length, mu = 6, conf.level = 95)
t.test(df$Sepal.Length, mu = 6, conf.level = 0.1)
t.test(df$Sepal.Length, mu = 6, conf.level = 0.99)
t.test(df1$Sepal.Length, df1$Petal.Length)
t.test(df1$Sepal.Length, df1$Petal.Length, paired = T)
###
?ToothGrowth
mean(ToothGrowth$len[ToothGrowth$supp == OJ || ToothGrowth$dose == 0.5])
mean(ToothGrowth$len[ToothGrowth$supp == Oj || ToothGrowth$dose == 0.5])
mean(ToothGrowth$len[ToothGrowth$supp == 'OJ' || ToothGrowth$dose == 0.5])
t.test(mean(ToothGrowth$len[ToothGrowth$supp == 'OJ' || ToothGrowth$dose == 0.5]), +
mean(ToothGrowth$len[ToothGrowth$supp == 'VC' || ToothGrowth$dose == 2]))
chisq.test(mean(ToothGrowth$len[ToothGrowth$supp == 'OJ' || ToothGrowth$dose == 0.5]), +
mean(ToothGrowth$len[ToothGrowth$supp == 'VC' || ToothGrowth$dose == 2]))
mean(ToothGrowth$len[ToothGrowth$supp == 'VC' || ToothGrowth$dose == 2]
)
mean(ToothGrowth$len[ToothGrowth$supp == 'OJ' || ToothGrowth$dose == 0.5])
mean(ToothGrowth$len[ToothGrowth$supp == 'VC' || ToothGrowth$dose == 2])
?chisq.test
?fisher_test
?fisher_test
chisq.test(mean(ToothGrowth$len[ToothGrowth$supp == 'OJ' || ToothGrowth$dose == 0.5]), +
mean(ToothGrowth$len[ToothGrowth$supp == 'VC' || ToothGrowth$dose == 2]))
mean(ToothGrowth$len[ToothGrowth$supp == 'OJ' || ToothGrowth$dose == 0.5])
mean(ToothGrowth$len[ToothGrowth$supp == 'VC' || ToothGrowth$dose == 2])
mean(ToothGrowth$len[ToothGrowth$supp == 'OJ' & ToothGrowth$dose == 0.5])
mean(ToothGrowth$len[ToothGrowth$supp == 'VC' & ToothGrowth$dose == 2])
chisq.test(mean(ToothGrowth$len[ToothGrowth$supp == 'OJ' || ToothGrowth$dose == 0.5]), +
mean(ToothGrowth$len[ToothGrowth$supp == 'VC' || ToothGrowth$dose == 2]))
wilcox.test(df1$Sepal.Length, mu=2)
wilcox.test(df1$Sepal.Length, mu=2, paired = T)
wilcox.test(df1$Sepal.Length, df1$Sepal.Length, paired = T)
wilcox.test(df1$Sepal.Length, df1$Sepal.Width, paired = T)
wilcox.test(df1$Sepal.Length, mu=1, paired = F)
df1
wilcox.test(df1$Sepal.Length, mu=3, paired = F)
wilcox.test(df1$Sepal.Length, mu=5, paired = F)
wilcox.test(df1$Sepal.Length, mu=6, paired = F)
wilcox.test(df1$Sepal.Length, mu=7, paired = F)
ttt <- read.table(dataset_11504_15.txt)
getwd
getwd()
ttt <- read.table(dataset_11504_15.txt)
getwd()
setwd(/home/dwe/R/Working_Directory/Stepik_1/Part_2)
setwd("/home/dwe/R/Working_Directory/Stepik_1/Part_2")
getwd()
ttt <- read.table(dataset_11504_15.txt)
ttt <- read.table("dataset_11504_15.txt")
ttt
bartlett.test(ttt)
bartlett.test(ttt$V1)
bartlett.test(ttt$1)
str(ttt)
bartlett.test(ttt$V1)
bartlett.test(ttt$V1, g = V2)
?bartlett.test
bartlett.test(ttt$V1, ttt$V2)
str(ttt)
#####
ttt <- read.table("dataset_11504_15.txt")
str(ttt)
bartlett.test(ttt$V1, ttt$V2)
t.test(ttt$V1, ttt$V2)
t.test(ttt$V1, ttt$V2)$p.value
wilcox.test(t.test(ttt$V1, ttt$V2)$p.value)
wilcox.test(ttt$V1, ttt$V2)$p.value
t.test(ttt$V1, ttt$V2)$p.value
wilcox.test(ttt$V1, ttt$V2)$p.value
t.test(ttt$V1, ttt$V2, var.equal = T)$p.value
#####
ttt <- read.table("dataset_11504_15.txt")
str(ttt)
bartlett.test(ttt$V1, ttt$V2)
t.test(ttt$V1, ttt$V2, var.equal = T)$p.value
#####
ttt <- read.table("dataset_11504_15.txt")
str(ttt)
bartlett.test(ttt$V1, ttt$V2)
wilcox.test(ttt$V1, ttt$V2)$p.value
#####
ttt <- read.table("dataset_11504_15.txt")
#####
ttt <- read.table("dataset_11504_15.txt")
str(ttt)
bartlett.test(ttt$V1, ttt$V2)
wilcox.test(ttt$V1, ttt$V2)$p.value
#####
ttt <- read.table("dataset_11504_15.txt")
str(ttt)
bartlett.test(ttt$V1, ttt$V2)
t.test(ttt$V1, ttt$V2, var.equal = T)$p.value
#####
ttt <- read.table("dataset_11504_15.txt")
str(ttt)
bartlett.test(ttt$V1, ttt$V2)
t.test(ttt$V1, ttt$V2, var.equal = T)$p.value
#####
ttt <- read.table("dataset_11504_15.txt")
str(ttt)
bartlett.test(ttt$V1, ttt$V2)
t.test(ttt$V1, ttt$V2, var.equal = T)$p.value
wilcox.test(ttt$V1, ttt$V2)$p.value
#####
ttt <- read.table("dataset_11504_15.txt")
str(ttt)
bartlett.test(ttt$V1, ttt$V2)
t.test(ttt$V1, ttt$V2, var.equal = T)$p.value
t.test(ttt$V1, ttt$V2, var.equal = T)$p.value
wilcox.test(ttt$V1, ttt$V2)$p.value
#####
ttt <- read.table("dataset_11504_15.txt")
str(ttt)
bartlett.test(ttt$V1, ttt$V2)
t.test(ttt$V1, ttt$V2, var.equal = T)$p.value
t.test(tttV1~V2, ttt, var.equal = T)$p.value
t.test(V1~V2, ttt, var.equal = T)$p.value
wilcox.test(ttt$V1, ttt$V2)$p.value
wilcox.test(V1~V2, ttt)$p.value
#####
ttt <- read.table("dataset_11504_15.txt")
str(ttt)
bartlett.test(ttt$V1, ttt$V2)
wilcox.test(V1~V2, ttt)$p.value
ttt <- read.table("dataset_11504_16.txt")
str(ttt)
t.test(ttt:V1, ttt:V2)
t.test(ttt$V1, ttt$V2)
t.test(ttt$V1, ttt$V2, var.equal = F, paired = F)
ttt <- read.table("dataset_11504_16.txt")
str(ttt)
t.test(ttt$V1, ttt$V2, var.equal = F, paired = F)
df <- read.csv("~/Downloads/dataset_11504_16.txt", sep = " ", header = FALSE)
#####
df1 <- npk
summary(df1)
?npk
t <- aov(yeld ~ p * K)
t <- aov(yeld ~ P * K, df1)
t <- aov(yield ~ P * K, df1)
t
t$p.value
t[p.value]
summary(t)
t <- aov(yield ~ P:K, df1)
summary(t)
t
t <- aov(yield ~ P*K, df1)
summary(t)
t
t <- aov(yield ~ P*K, data = df1)
summary(t)
t <- aov(yield ~ P + K + P:K, data = df1)
summary(t)
t
t <- aov(yield ~ P + K + P:K, data = df1)
t <- aov(yield ~ P + K + P:N, data = df1)
summary(t)
t <- aov(yield ~ P + N + P:N, data = df1)
summary(t)
summary(aov(yield ~ N + P + K, data = df1))
df1 <-iris
TukeyHSD(df1)
TukeyHSD(iris)
aov(Sepal.Width ~ Species, df1)
summary(t)
t <- aov(Sepal.Width ~ Species, df1)
summary(t)
t <- aov(Sepal.Width ~ Species, df1)
summary(t)
s
df1 <-iris
TukeyHSD(iris)
t <- aov(Sepal.Width ~ Species, df1)
summary(t)
TukeyHSD(Sepal.Width ~ Species, df1)
TukeyHSD(t)
summary(t)
t <- aov(Sepal.Width ~ Species, df1)
TukeyHSD(t)
md2 <- read.csv("therapy_data.csv")
symmary(md2)
summary(md2)
str(md2)
md2
aov(well_being ~ price, data = md2)
summary(t)
str(md2)
t <- aov(well_being ~ sex, data = md2)
summary(t)
str(md2)
t <- aov(well_being ~ subject, data = md2)
summary(t)
t <- aov(well_being ~ therapy, data = md2)
summary(t)
t <- aov(well_being ~ therapy + Error(subject/therapy), data = md2)
summary(t)
t <- aov(well_being ~ therapy + price, data = md2)
summary(t)
t <- aov(well_being ~ therapy * price, data = md2)
summary(t)
t <- aov(well_being ~ therapy * price + Error(subject/(therapy*price)), data = md2)
summary(t)
###
pil1 <- read.csv("Pillulkin.csv")
summary(pil1)
str(pil1)
pil1
pil1$patient <- as.factor(pil1$patient)
summary(pil1)
str(pil1)
###
pil1 <- read.csv("Pillulkin.csv")
str(pil1)
pil1$patient <- as.factor(pil1$patient)
summary(pil1)
str(pil1)
t <- aov(temperature ~ pill*patient + Error(patient/pill))
t <- aov(temperature ~ pill*patient + Error(patient/pill))
t <- aov(temperature ~ pill*patient + Error(patient/pill), data = pil1)
t
tsummary(t)
summary(t)
fit3 <- aov(well_being ~ therapy*price*sex, data = mydata2)
summary(fit3)
###
pil1 <- read.csv("Pillulkin.csv")
summary(pil1)
str(pil1)
pil1
pil1$patient <- as.factor(pil1$patient)
t <- aov(temperature ~ pill*patient + Error(patient/pill), data = pil1)
summary(t)
str(pil1)
pil1
t <- aov(temperature ~ pill + Error(patient/pill), data = pil1)
summary(t)
t <- aov(temperature ~ pill*doctor + Error(patient/(pill*doctor)), data = pil1)
summary(t)
barplot(pill)
barplot(pil1)
summary(pil1)
str(pil1)
ggplot(mydata2, aes(x = doctor, y = temperature)) +
geom_boxplot() +
facet_grid(~patient)
library(ggplot2)
ggplot(mydata2, aes(x = doctor, y = temperature)) +
geom_boxplot() +
facet_grid(~patient)
ggplot(pil1, aes(x = doctor, y = temperature)) +
geom_boxplot() +
facet_grid(~patient)
ggplot(pil1, aes(x = doctor, y = temperature)) +
geom_boxplot() +
facet_grid(pill)
str(pil1)
ggplot(pil1, aes(x = doctor, y = temperature)) +
geom_boxplot()
ggplot(pil1, aes(x = pill, y = temperature)) +
geom_boxplot()
t <- aov(temperature ~ pill*doctor + Error(patient/(pill*doctor)), data = pil1)
barplot(pil1)
boxplot(pil1)
library(ggplot2)
ggplot(pil1, aes(x = pill, y = temperature)) +
geom_boxplot()
t <- aov(temperature ~ pill*doctor + Error(patient/(pill*doctor)), data = pil1)
summary(t)
obj <- ggplot(ToothGrowth, aes(x = as.factor(dose), y = len, col = supp))+
stat_summary(fun.data = mean_cl_boot, geom = 'errorbar', width = 0.1, position = position_dodge(0.2))+
stat_summary(fun.data = mean_cl_boot, geom = 'point', size = 3, position = position_dodge(0.2))+
stat_summary(fun.data = mean_cl_boot, geom = 'line', position = position_dodge(0.2))
obj <- ggplot(ToothGrowth, aes(x = as.factor(dose), y = len, col = supp))+
stat_summary(fun.data = mean_cl_boot, geom = 'errorbar', width = 0.1, position = position_dodge(0.2))+
stat_summary(fun.data = mean_cl_boot, geom = 'point', size = 3, position = position_dodge(0.2))+
stat_summary(fun.data = mean_cl_boot, geom = 'line', position = position_dodge(0.2))
obj
obj <- ggplot(ToothGrowth, aes(x = as.factor(dose), y = len, col = supp, group = T))+
stat_summary(fun.data = mean_cl_boot, geom = 'errorbar', width = 0.1, position = position_dodge(0.2))+
stat_summary(fun.data = mean_cl_boot, geom = 'point', size = 3, position = position_dodge(0.2))+
stat_summary(fun.data = mean_cl_boot, geom = 'line', position = position_dodge(0.2))
obj
obj <- ggplot(ToothGrowth, aes(x = as.factor(dose), y = len, col = supp, group = F))+
stat_summary(fun.data = mean_cl_boot, geom = 'errorbar', width = 0.1, position = position_dodge(0.2))+
stat_summary(fun.data = mean_cl_boot, geom = 'point', size = 3, position = position_dodge(0.2))+
stat_summary(fun.data = mean_cl_boot, geom = 'line', position = position_dodge(0.2))
obj
obj <- ggplot(ToothGrowth, aes(x = as.factor(dose), y = len, col = supp))+
stat_summary(fun.data = mean_cl_boot, geom = 'errorbar', width = 0.1, position = position_dodge(0.2))+
stat_summary(fun.data = mean_cl_boot, geom = 'point', size = 3, position = position_dodge(0.2))+
stat_summary(fun.data = mean_cl_boot, geom = 'line', position = position_dodge(0.2))
obj
obj <- ggplot(ToothGrowth, aes(x = as.factor(dose), y = len, col = group(supp))+
stat_summary(fun.data = mean_cl_boot, geom = 'point', size = 3, position = position_dodge(0.2))+
obj <- ggplot(ToothGrowth, aes(x = as.factor(dose), y = len, col = grosupp))+
stat_summary(fun.data = mean_cl_boot, geom = 'errorbar', width = 0.1, position = position_dodge(0.2))+
stat_summary(fun.data = mean_cl_boot, geom = 'point', size = 3, position = position_dodge(0.2))+
stat_summary(fun.data = mean_cl_boot, geom = 'line', position = position_dodge(0.2))
obj <- ggplot(ToothGrowth, aes(x = as.factor(dose), y = len, col = grop(supp))+
obj <- ggplot(ToothGrowth, aes(x = as.factor(dose), y = len, col = supp))+
stat_summary(fun.data = mean_cl_boot, geom = 'errorbar', width = 0.1, position = position_dodge(0.2))+
stat_summary(fun.data = mean_cl_boot, geom = 'point', size = 3, position = position_dodge(0.2))+
stat_summary(fun.data = mean_cl_boot, geom = 'line', position = position_dodge(0.2))
obj
obj <- ggplot(ToothGrowth, aes(x = as.factor(dose), y = len, col = supp, group = Altersgr))+
stat_summary(fun.data = mean_cl_boot, geom = 'errorbar', width = 0.1, position = position_dodge(0.2))+
stat_summary(fun.data = mean_cl_boot, geom = 'point', size = 3, position = position_dodge(0.2))+
stat_summary(fun.data = mean_cl_boot, geom = 'line', position = position_dodge(0.2))
obj
str(ToothGrowth)
obj <- ggplot(ToothGrowth, aes(x = as.factor(dose), y = len, col = supp, group = supp))+
stat_summary(fun.data = mean_cl_boot, geom = 'errorbar', width = 0.1, position = position_dodge(0.2))+
stat_summary(fun.data = mean_cl_boot, geom = 'point', size = 3, position = position_dodge(0.2))+
stat_summary(fun.data = mean_cl_boot, geom = 'line', position = position_dodge(0.2))
obj
function(x, y){
s <- x + y
return(s)
}
my_calc <- function(x, y){
s <- x + y
return(s)
}
my_calc(2, 3)
my_calc <- function(x, y){
s <- x + y
d <- x - y
return(c(s, d))
}
my_calc(2, 3
)
my_calc(2, 3)[1]
my_calc(2, 3)[2]
my_calc(2, 3)[0]
my_calc(2, 3)[3]
my_calc(2, 3)[1, 2]
my_calc(2, 3)[1:2]
distr1 <- rnorm(100)
distr
distr1
distr1[1:30] <- NA
distr1
distr1[is.na(distr1)]
distr1[is.na(distr1)] <- mean(distr1)
distr1
distr1[is.na(distr1)] <- mean(distr1, na.rm = T)
distr1
my_na_rm <- function(x){
x[is.na(x)] <- mean(x, na.rm = T)
return(x)
}
distr1
my_na_rm <- function(x){
x[is.na(x)] <- mean(x, na.rm = T)
return(x)
}
distr1
distr1 <- rnorm(100)
distr1[1:30] <- NA
my_na_rm(distr1)
distr1 <- my_na_rm(distr1)
hist(distr1)
distr1 <- rnorm(100)
hist(distr1)
distr1[1:30] <- NA
hist(distr1)
distr1 <- my_na_rm(distr1)
hist(distr1)
ggplot(distr_frame, aes(x = RNORM)) +
geom_histogram(binwidth = 0.45, color = "black", fill = "green")
ggplot(distr1, aes(x = RNORM)) +
geom_histogram(binwidth = 0.45, color = "black", fill = "green")
distr1  <- rnorm(100)
distr1[1:30]  <- NA
distr1[is.na(distr1)]  <- mean(distr1, na.rm = T)
my_na_rm  <- function(x){
if (is.numeric(x)){
stat_test  <- shapiro.test(x)
if (stat_test$p.value > 0.05){
x[is.na(x)]  <- mean(x, na.rm = T)
print("NA values were replaced with mean")
} else{
x[is.na(x)]  <- median(x, na.rm = T)
print("NA values were replaced with median")
}
return(x)
} else{
print("X is not numeric")
}
}
d1  <- rnorm(2000)
d2  <- runif(2000)
d1[1:10]  <- NA
d2[1:10]  <- NA
d1  <- my_na_rm(d1)
head(d1)
d2  <- my_na_rm(d2)
head(d2)
#####
my_vector <- c(1, 2, 3, NA, NA)
which(x = my_vector, arr.ind = is.na(my_vector))
w <- which(x = my_vector, arr.ind = is.na(my_vector))
w <- which(my_vector, is.na(my_vector))
w <- which(is.na(my_vector))
w
which(is.na(my_vector))
NA.position <- function(vec){
return(which(is.na(vec)))
}
NA.counter <- function(vec){
returnlength((which(is.na(vec))))
}
NA.counter(my_vector)
NA.counter <- function(vec){
return(length((which(is.na(vec)))
}
NA.counter(my_vector)
NA.counter <- function(vec){
return(length((which(is.na(vec)))))
}
NA.counter(my_vector)
