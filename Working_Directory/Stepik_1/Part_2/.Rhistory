demo()
10:50
mean(10:50)
45 = 50
45  + 456
45  + 456
10:30
mean(10:30)
45  + 456
10:30
mean(10:30)
45  + 456
mean(10:30)
plot(10)
plot(10:100:3)
plot(10:3:20)
?plot
my_var1 <-  42
my_var2 <- 35.25
my_var1 + my_var1
my_var1 <-  42
my_var2 <- 35.25
my_var1 + my_var1
my_var3 = my_var1^2 + my_var2^2
my_var1 <-  42
my_var2 <- 35.25
my_var1 + my_var1
my_var3 = my_var1^2 + my_var2^2
my_var3
my_var1 <-  42
my_var2 <- 35.25
my_var1 + my_var1
my_var3 = my_var1^2 + my_var2^2
my_var3
my_var3 > 200
my_var1 <-  42
my_var2 <- 35.25
my_var1 + my_var1
my_var3 = my_var1^2 + my_var2^2
my_var3
my_var3 == 200
AirPassengers
?cumsum
cumsum(1:10)
AirPassengers[1:3]
cumsum(AirPassengers[1:3])
cumsum(AirPassengers[3])
cumsum(AirPassengers[3])
cumsum(AirPassengers[1,3])
cumsum(AirPassengers[1:10])
cumsum(AirPassengers[1:10])[10]
cumsum(AirPassengers[1:10])[10]/10
cumsum(AirPassengers[1:10]) - cumsum(AirPassengers[2:11])
cumsum(AirPassengers)
cumsum(AirPassengers[1:144])
cumsum(AirPassengers[1:144]) - cumsum(AirPassengers[10:144])
cumsum(AirPassengers[1:135]) - cumsum(AirPassengers[10:144])
cumsum(AirPassengers[1:144]) - cumsum(AirPassengers[10:135])
cumsum(AirPassengers[1:135]) - cumsum(AirPassengers[10:144])
cumsum(AirPassengers[10:144]) - cumsum(AirPassengers[1:135])
AirPassengers
(cumsum(AirPassengers[10:144]) - cumsum(AirPassengers[1:135]))/10
cumsum(AirPassengers[1:10])[10]/10
cumsum(AirPassengers[1:10])[10]/10
cumsum(AirPassengers[1:10])/10
AirPassengers
cumsum(AirPassengers[1:10])/10
cumsum(AirPassengers[1:10])
cumsum(AirPassengers[1:11])
cumsum(AirPassengers[2:11]) - cumsum(AirPassengers[1:10])
cumsum(AirPassengers[2:11] - AirPassengers[1:10])
cumsum(AirPassengers[1:11])
cumsum(AirPassengers[1:11]) - cumsum(AirPassengers[1])
cumsum(AirPassengers[2:11]) - cumsum(AirPassengers[1])
cumsum(AirPassengers[2:11]) - cumsum(AirPassengers[1])/10
(cumsum(AirPassengers[2:11]) - cumsum(AirPassengers[1]))/10
(cumsum(AirPassengers[1:11]) - cumsum(AirPassengers[1]))/10
(cumsum(AirPassengers[1:11]) - cumsum(AirPassengers[1]))/10
(cumsum(AirPassengers[10:144]) - cumsum(AirPassengers[1:135]))/10
c(cumsum(AirPassengers[1:10]))
c(cumsum(AirPassengers[1:10]), cumsum(AirPassengers[2:11]))
c(cumsum(AirPassengers[1:10]), cumsum(AirPassengers[10:11]))
c(cumsum(AirPassengers[1:10]), cumsum(AirPassengers[11:11]))
c(cumsum(AirPassengers[1:10]), cumsum(AirPassengers[2:11]))
c(cumsum(AirPassengers[1:10])[1], cumsum(AirPassengers[2:11]))
c(cumsum(AirPassengers[1:10])[10], cumsum(AirPassengers[2:11]))
c(cumsum(AirPassengers[1:10])[10], cumsum(AirPassengers[2:11])[10])
(cumsum(AirPassengers[10:144]) - cumsum(AirPassengers[1:135]))/10
(cumsum(AirPassengers[1:144]) - cumsum(AirPassengers[1:135]))/10
(cumsum(AirPassengers[1:144]) - c(rep(0, 10), cumsum(AirPassengers[1:135]))/10
1
(cumsum(AirPassengers[1:144]) - c(rep(0, 10), cumsum(AirPassengers[1:135])))/10
(cumsum(AirPassengers[1:144]) - c(rep(0, 9), cumsum(AirPassengers[1:135])))/10
(cumsum(AirPassengers[1:11]) - c(rep(0, 1), cumsum(AirPassengers[1:10])))/10
(cumsum(AirPassengers[1:11]) - c(rep(0, 1), cumsum(AirPassengers[1:10])))/10
rep(0, 1)
rep(0, 1)
rep(0, 1), cumsum(AirPassengers[1:10]
rep(0, 1), cumsum(AirPassengers[1:10])
c(rep(0, 1), cumsum(AirPassengers[1:10])
)
c(rep(0, 1), cumsum(AirPassengers[1:10]))
cumsum(AirPassengers[1:11])
(cumsum(AirPassengers[1:11]) - c(rep(0, 10), cumsum(AirPassengers[11])))/10
(cumsum(AirPassengers[1:144]) - c(rep(0, 9), cumsum(AirPassengers[1:135])))/10
(cumsum(AirPassengers[1:11]) - c(rep(0, 10), cumsum(AirPassengers[11])))/10
AirPassengers
AirPassengers[1, 11]
AirPassengers[11]
AirPassengers[1:11]
cumsum(AirPassengers[1:11])
1402 - 1298
1402 - 112
(cumsum(AirPassengers[1:11]) - c(rep(0, 10), cumsum(AirPassengers[11])))/10
(cumsum(AirPassengers[1:11]) - c(rep(0, 10), cumsum(AirPassengers[10])))/10
(cumsum(AirPassengers[1:11]) - c(rep(0, 10), cumsum(AirPassengers[9])))/10
(cumsum(AirPassengers[1:11]) - c(rep(0, 10), cumsum(AirPassengers[11])))/10
(cumsum(AirPassengers[1:11]) - c(rep(0, 10), cumsum(AirPassengers[1])))/10
(cumsum(AirPassengers[1:144]) - c(rep(0, 10), cumsum(AirPassengers[1:135])))/10
(cumsum(AirPassengers[1:144]) - c(rep(0, 10), cumsum(AirPassengers[1:134])))/10
(cumsum(AirPassengers[1:144]) - c(rep(0, 10), cumsum(AirPassengers[1:134])))/10[10:134]
((cumsum(AirPassengers[1:144]) - c(rep(0, 10), cumsum(AirPassengers[1:134])))/10)[10:134]
((cumsum(AirPassengers[1:144]) - c(rep(0, 10), cumsum(AirPassengers[1:134])))/10)
((cumsum(AirPassengers[1:144]) - c(rep(0, 10), cumsum(AirPassengers[1:134])))/10)[10:]
((cumsum(AirPassengers[1:144]) - c(rep(0, 10), cumsum(AirPassengers[1:134])))/10)[10:]
((cumsum(AirPassengers[1:144]) - c(rep(0, 10), cumsum(AirPassengers[1:134])))/10)[10:135]
((cumsum(AirPassengers[1:144]) - c(rep(0, 10), cumsum(AirPassengers[1:134])))/10)[10:136]
((cumsum(AirPassengers[1:144]) - c(rep(0, 10), cumsum(AirPassengers[1:134])))/10)[10:144]
ggplot(iris, aes(Sepal.Length)) + geom_histogram(fill = Species)
library(ggplot2)
ggplot(iris, aes(Sepal.Length)) + geom_histogram(fill = Species)
iris
ggplot(iris, aes(Sepal.Length)) + geom_histogram(aes(fill = Species))
ggplot(iris, aes(Sepal.Length)) + geom_histogram(aes(col = Species))
ggplot(iris, aes(Sepal.Length)) + geom_histogram(fill = Species)
ggplot(iris, aes(Sepal.Length)) + geom_histogram(aes(fill = Species))
ggplot(iris, aes(Sepal.Length)) + geom_histogram(aes(col = Species))
ggplot(iris, aes(Sepal.Length, col = Species)) + geom_histogram()
ggplot(iris, aes(Sepal.Length, fill = Species)) + geom_histogram()
ggplot(mtcars, aes(x=mpg, y=disp, col=hp)) + geom_point()
?iris
dni3 <- dimnames(iris3)
ii <- data.frame(matrix(aperm(iris3, c(1,3,2)), ncol = 4,
dimnames = list(NULL, sub(" L.",".Length",
sub(" W.",".Width", dni3[[2]])))),
Species = gl(3, 50, labels = sub("S", "s", sub("V", "v", dni3[[3]]))))
all.equal(ii, iris) # TRUE
plot(iris)
df <- iris
View(df)
str(df)
df1 <- subset(x = df, df$Species != "setosa")
df1 <- subset(df, df$Species != "setosa")
str(df1)
table(df1)
table(df1$Species)
hist(df1$Sepal.Length)
ggplot(df1, aes(x = Sepal.Length))
ggplot2
library(ggplot2)
ggplot(df1, aes(x = Sepal.Length))
ggplot(df1, aes(x = Sepal.Length)) + geom_histogram()
ggplot(df1, aes(x = Sepal.Length)) + geom_histogram(fill = "white")
ggplot(df1, aes(x = Sepal.Length)) + geom_histogram(fill = "white", col = "black")
ggplot(df1, aes(x = Sepal.Length)) + geom_histogram(fill = "white", col = "black", binwidth = 5)
ggplot(df1, aes(x = Sepal.Length)) + geom_histogram(fill = "white", col = "black", binwidth = 0.4)
ggplot(df1, aes(x = Sepal.Length)) +
geom_histogram(fill = "white", col = "black", binwidth = 0.4) +
facet_grid(Species ~ .)
ggplot(df1, aes(x = Sepal.Length)) +
geom_histogram(fill = "white", col = "black", binwidth = 0.4) +
facet_grid(Species)
ggplot(df1, aes(x = Sepal.Length)) +
geom_histogram(fill = "white", col = "black", binwidth = 0.4) +
facet_grid(Species ~ .)
ggplot(df1, aes(Sepal.Length, col = Species))
ggplot(df1, aes(Sepal.Length, col = Species)) +
geom_density()
ggplot(df1, aes(Sepal.Length, col = Species)) +
geom_density(fit = color)
ggplot(df1, aes(Sepal.Length, col = Species)) +
geom_density(fit = Specoes)
ggplot(df1, aes(Sepal.Length, col = Species)) +
geom_density(fit = Species)
ggplot(df1, aes(Sepal.Length, col = Species)) +
geom_density(fit = df1$Species)
ggplot(df1, aes(Sepal.Length, col = Species)) +
geom_density(fill = df1$Species)
ggplot(df1, aes(Sepal.Length, col = Species)) +
geom_density(fill = Species)
ggplot(df1, aes(Sepal.Length, col = Species)) +
geom_density()
ggplot(df1, aes(Sepal.Length, col = Species, fill = Species)) +
geom_density()
ggplot(df1, aes(Sepal.Length, col = Species, fill = Species, alpha = 0.5) +
ewdwq
2
1
ggplot(df1, aes(Sepal.Length, col = Species, fill = Species, alpha(0.5)) +
1
1
1
1
ggplot(df1, aes(Sepal.Length, col = Species, fill = Species, alpha() = 0.5) +
geom_density(alpha = 0.5
geom_density(alpha = 0.5)
ggplot(df1, aes(Sepal.Length, col = Species, fill = Species) +
geom_density(alpha = 0.5)
ggplot(df1, aes(Sepal.Length, col = Species, fill = Species) +
geom_density(alpha = 0.5)
ggplot(df1, aes(Sepal.Length, col = Species, fill = Species)) +
geom_density(alpha = 0.5)
ggplot(df1, aes(Sepal.Length, col = Species, fill = Species, alpha = 0.5)) +
geom_density()
ggplot(df1, aes(Sepal.Length, col = 'Black', fill = Species, alpha = 0.5)) +
geom_density()
ggplot(df1, aes(Sepal.Length, col = Black, fill = Species, alpha = 0.5)) +
geom_density()
ggplot(df1, aes(Sepal.Length, fill = Species, alpha = 0.5)) +
geom_density()
ggplot(df1, aes(Species ))
ggplot(df1, aes(Species )) +
geom_boxplot()
ggplot(df1, aes(Species ~ Sepal.Length )) +
geom_boxplot()
ggplot(df1, aes(Species ~ Sepal.Length, df1 )) +
geom_boxplot()
ggplot(df1, aes(Species, Sepal.Length)) +
geom_boxplot()
shapiro.test(df)
shapiro.test(df1)
shapiro.test(df1$Sepal.Length)
shapiro.test(df1$Sepal.Length[Species == "versicolor"])
shapiro.test(df1$Sepal.Length[df1$Species == "versicolor"])
shapiro.test(df1$Sepal.Length[df1$Species == "virginica"])
bartlett.test(Sepal.Length ~ Species, df)
bartlett.test(Sepal.Length ~ Species, df1)
t.test(Sepal.Length ~ Species, df1)
ttt <- t.test(Sepal.Length ~ Species, df1)
str(ttt)
ttt$p.value
ttt$p.ve
t.test(Sepal.Length ~ Species, df)
t.test(df$Sepal.Length, mu = 8)
t.test(df$Sepal.Length, mu = 8, conf.level = 0.99)
t.test(df$Sepal.Length, mu = 7, conf.level = 0.99)
mean(df$Sepal.Length)
t.test(df$Sepal.Length, mu = 6, conf.level = 0.99)
t.test(df$Sepal.Length, mu = 6, conf.level = 0.95)
t.test(df$Sepal.Length, mu = 6, conf.level = 0.5)
t.test(df$Sepal.Length, mu = 6, conf.level = 0.1)
t.test(df$Sepal.Length, mu = 6, conf.level = 0.001)
t.test(df$Sepal.Length, mu = 6, conf.level = 0.99999999)
t.test(df$Sepal.Length, mu = 6, conf.level = 1)
t.test(df$Sepal.Length, mu = 6, conf.level = 95)
t.test(df$Sepal.Length, mu = 6, conf.level = 0.1)
t.test(df$Sepal.Length, mu = 6, conf.level = 0.99)
t.test(df1$Sepal.Length, df1$Petal.Length)
t.test(df1$Sepal.Length, df1$Petal.Length, paired = T)
###
?ToothGrowth
mean(ToothGrowth$len[ToothGrowth$supp == OJ || ToothGrowth$dose == 0.5])
mean(ToothGrowth$len[ToothGrowth$supp == Oj || ToothGrowth$dose == 0.5])
mean(ToothGrowth$len[ToothGrowth$supp == 'OJ' || ToothGrowth$dose == 0.5])
t.test(mean(ToothGrowth$len[ToothGrowth$supp == 'OJ' || ToothGrowth$dose == 0.5]), +
mean(ToothGrowth$len[ToothGrowth$supp == 'VC' || ToothGrowth$dose == 2]))
chisq.test(mean(ToothGrowth$len[ToothGrowth$supp == 'OJ' || ToothGrowth$dose == 0.5]), +
mean(ToothGrowth$len[ToothGrowth$supp == 'VC' || ToothGrowth$dose == 2]))
mean(ToothGrowth$len[ToothGrowth$supp == 'VC' || ToothGrowth$dose == 2]
)
mean(ToothGrowth$len[ToothGrowth$supp == 'OJ' || ToothGrowth$dose == 0.5])
mean(ToothGrowth$len[ToothGrowth$supp == 'VC' || ToothGrowth$dose == 2])
?chisq.test
?fisher_test
?fisher_test
chisq.test(mean(ToothGrowth$len[ToothGrowth$supp == 'OJ' || ToothGrowth$dose == 0.5]), +
mean(ToothGrowth$len[ToothGrowth$supp == 'VC' || ToothGrowth$dose == 2]))
mean(ToothGrowth$len[ToothGrowth$supp == 'OJ' || ToothGrowth$dose == 0.5])
mean(ToothGrowth$len[ToothGrowth$supp == 'VC' || ToothGrowth$dose == 2])
mean(ToothGrowth$len[ToothGrowth$supp == 'OJ' & ToothGrowth$dose == 0.5])
mean(ToothGrowth$len[ToothGrowth$supp == 'VC' & ToothGrowth$dose == 2])
chisq.test(mean(ToothGrowth$len[ToothGrowth$supp == 'OJ' || ToothGrowth$dose == 0.5]), +
mean(ToothGrowth$len[ToothGrowth$supp == 'VC' || ToothGrowth$dose == 2]))
wilcox.test(df1$Sepal.Length, mu=2)
wilcox.test(df1$Sepal.Length, mu=2, paired = T)
wilcox.test(df1$Sepal.Length, df1$Sepal.Length, paired = T)
wilcox.test(df1$Sepal.Length, df1$Sepal.Width, paired = T)
wilcox.test(df1$Sepal.Length, mu=1, paired = F)
df1
wilcox.test(df1$Sepal.Length, mu=3, paired = F)
wilcox.test(df1$Sepal.Length, mu=5, paired = F)
wilcox.test(df1$Sepal.Length, mu=6, paired = F)
wilcox.test(df1$Sepal.Length, mu=7, paired = F)
ttt <- read.table(dataset_11504_15.txt)
getwd
getwd()
ttt <- read.table(dataset_11504_15.txt)
getwd()
setwd(/home/dwe/R/Working_Directory/Stepik_1/Part_2)
setwd("/home/dwe/R/Working_Directory/Stepik_1/Part_2")
getwd()
ttt <- read.table(dataset_11504_15.txt)
ttt <- read.table("dataset_11504_15.txt")
ttt
bartlett.test(ttt)
bartlett.test(ttt$V1)
bartlett.test(ttt$1)
str(ttt)
bartlett.test(ttt$V1)
bartlett.test(ttt$V1, g = V2)
?bartlett.test
bartlett.test(ttt$V1, ttt$V2)
str(ttt)
#####
ttt <- read.table("dataset_11504_15.txt")
str(ttt)
bartlett.test(ttt$V1, ttt$V2)
t.test(ttt$V1, ttt$V2)
t.test(ttt$V1, ttt$V2)$p.value
wilcox.test(t.test(ttt$V1, ttt$V2)$p.value)
wilcox.test(ttt$V1, ttt$V2)$p.value
t.test(ttt$V1, ttt$V2)$p.value
wilcox.test(ttt$V1, ttt$V2)$p.value
t.test(ttt$V1, ttt$V2, var.equal = T)$p.value
#####
ttt <- read.table("dataset_11504_15.txt")
str(ttt)
bartlett.test(ttt$V1, ttt$V2)
t.test(ttt$V1, ttt$V2, var.equal = T)$p.value
#####
ttt <- read.table("dataset_11504_15.txt")
str(ttt)
bartlett.test(ttt$V1, ttt$V2)
wilcox.test(ttt$V1, ttt$V2)$p.value
#####
ttt <- read.table("dataset_11504_15.txt")
#####
ttt <- read.table("dataset_11504_15.txt")
str(ttt)
bartlett.test(ttt$V1, ttt$V2)
wilcox.test(ttt$V1, ttt$V2)$p.value
#####
ttt <- read.table("dataset_11504_15.txt")
str(ttt)
bartlett.test(ttt$V1, ttt$V2)
t.test(ttt$V1, ttt$V2, var.equal = T)$p.value
#####
ttt <- read.table("dataset_11504_15.txt")
str(ttt)
bartlett.test(ttt$V1, ttt$V2)
t.test(ttt$V1, ttt$V2, var.equal = T)$p.value
#####
ttt <- read.table("dataset_11504_15.txt")
str(ttt)
bartlett.test(ttt$V1, ttt$V2)
t.test(ttt$V1, ttt$V2, var.equal = T)$p.value
wilcox.test(ttt$V1, ttt$V2)$p.value
#####
ttt <- read.table("dataset_11504_15.txt")
str(ttt)
bartlett.test(ttt$V1, ttt$V2)
t.test(ttt$V1, ttt$V2, var.equal = T)$p.value
t.test(ttt$V1, ttt$V2, var.equal = T)$p.value
wilcox.test(ttt$V1, ttt$V2)$p.value
#####
ttt <- read.table("dataset_11504_15.txt")
str(ttt)
bartlett.test(ttt$V1, ttt$V2)
t.test(ttt$V1, ttt$V2, var.equal = T)$p.value
t.test(tttV1~V2, ttt, var.equal = T)$p.value
t.test(V1~V2, ttt, var.equal = T)$p.value
wilcox.test(ttt$V1, ttt$V2)$p.value
wilcox.test(V1~V2, ttt)$p.value
#####
ttt <- read.table("dataset_11504_15.txt")
str(ttt)
bartlett.test(ttt$V1, ttt$V2)
wilcox.test(V1~V2, ttt)$p.value
ttt <- read.table("dataset_11504_16.txt")
str(ttt)
t.test(ttt:V1, ttt:V2)
t.test(ttt$V1, ttt$V2)
t.test(ttt$V1, ttt$V2, var.equal = F, paired = F)
ttt <- read.table("dataset_11504_16.txt")
str(ttt)
t.test(ttt$V1, ttt$V2, var.equal = F, paired = F)
df <- read.csv("~/Downloads/dataset_11504_16.txt", sep = " ", header = FALSE)
